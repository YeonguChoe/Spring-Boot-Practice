{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\nconst getNum = (param, defaultValue) => {\n  if (!param) {\n    return defaultValue;\n  }\n  return parseInt(param);\n};\n\n/**\r\n * 커스텀훅: 여러개의 훅을 1개로 묶고 훅을 재사용하기 위해 사용한다.\r\n */\n\nconst useCustomMove = () => {\n  _s();\n  // 이동하는 기능을 1개의 훅으로 묶어서 사용한다.\n  const navigate = useNavigate();\n  const [queryParams] = useSearchParams();\n\n  // URL에서 쿼리 스트링을 추출 한다.\n  const page = getNum(queryParams.get('page'), 1);\n  const size = getNum(queryParams.get('size'), 10);\n  const queryDefault = createSearchParams({\n    page,\n    size\n  }).toString();\n  const moveToList = () => {\n    navigate({\n      pathname: `../list`,\n      search: queryDefault\n    });\n  };\n  const moveToModify = tno => {\n    navigate({\n      pathname: `../modify/${tno}`,\n      search: queryDefault\n    });\n  };\n  return {\n    moveToList,\n    moveToModify,\n    page,\n    size\n  };\n};\n_s(useCustomMove, \"1De4wj+YU8pvRqjRSn2I6AnN1hc=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\nexport default useCustomMove;","map":{"version":3,"names":["createSearchParams","useNavigate","useSearchParams","getNum","param","defaultValue","parseInt","useCustomMove","_s","navigate","queryParams","page","get","size","queryDefault","toString","moveToList","pathname","search","moveToModify","tno"],"sources":["C:/Users/yeong/OneDrive/Desktop/Spring-Boot-Practice/frontend/src/hooks/useCustomMove.js"],"sourcesContent":["import {createSearchParams, useNavigate, useSearchParams} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param) {\r\n        return defaultValue;\r\n    }\r\n    return parseInt(param)\r\n}\r\n\r\n/**\r\n * 커스텀훅: 여러개의 훅을 1개로 묶고 훅을 재사용하기 위해 사용한다.\r\n */\r\n\r\nconst useCustomMove = () => {\r\n    // 이동하는 기능을 1개의 훅으로 묶어서 사용한다.\r\n    const navigate = useNavigate();\r\n    const [queryParams] = useSearchParams();\r\n\r\n    // URL에서 쿼리 스트링을 추출 한다.\r\n    const page = getNum(queryParams.get('page'), 1)\r\n    const size = getNum(queryParams.get('size'), 10)\r\n\r\n    const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n    const moveToList = () => {\r\n        navigate(({pathname: `../list`, search: queryDefault}))\r\n    }\r\n\r\n    const moveToModify = (tno) => {\r\n        navigate({\r\n            pathname: `../modify/${tno}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    return {moveToList, moveToModify, page, size}\r\n}\r\n\r\nexport default useCustomMove;"],"mappings":";AAAA,SAAQA,kBAAkB,EAAEC,WAAW,EAAEC,eAAe,QAAO,kBAAkB;AAEjF,MAAMC,MAAM,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;EACpC,IAAI,CAACD,KAAK,EAAE;IACR,OAAOC,YAAY;EACvB;EACA,OAAOC,QAAQ,CAACF,KAAK,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;;AAEA,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,WAAW,CAAC,GAAGR,eAAe,CAAC,CAAC;;EAEvC;EACA,MAAMS,IAAI,GAAGR,MAAM,CAACO,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGV,MAAM,CAACO,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;EAEhD,MAAME,YAAY,GAAGd,kBAAkB,CAAC;IAACW,IAAI;IAAEE;EAAI,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;EAEhE,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBP,QAAQ,CAAE;MAACQ,QAAQ,EAAG,SAAQ;MAAEC,MAAM,EAAEJ;IAAY,CAAE,CAAC;EAC3D,CAAC;EAED,MAAMK,YAAY,GAAIC,GAAG,IAAK;IAC1BX,QAAQ,CAAC;MACLQ,QAAQ,EAAG,aAAYG,GAAI,EAAC;MAC5BF,MAAM,EAAEJ;IACZ,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IAACE,UAAU;IAAEG,YAAY;IAAER,IAAI;IAAEE;EAAI,CAAC;AACjD,CAAC;AAAAL,EAAA,CAvBKD,aAAa;EAAA,QAEEN,WAAW,EACNC,eAAe;AAAA;AAsBzC,eAAeK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}