{"ast":null,"code":"var _jsxFileName = \"/Users/yeonguchoe/Desktop/SaleCar24/frontend/src/router/root.js\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { Suspense, lazy } from \"react\";\nimport todoRouter from \"./todoRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"text-5xl\",\n  children: \"Loading...\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 17\n}, this);\n\n// Main Page에 대한 느린 컴포넌트를 만든다.\nconst Main = /*#__PURE__*/lazy(_c = function () {\n  return import(\"../pages/MainPage\");\n});\n\n// About Page에 대한 느린 컴포넌트를 만든다.\n_c2 = Main;\nconst About = /*#__PURE__*/lazy(_c3 = function () {\n  return import(\"../pages/AboutPage\");\n});\n_c4 = About;\nconst TodoIndex = /*#__PURE__*/lazy(_c5 = () => import(\"../pages/todo/indexPage\"));\n_c6 = TodoIndex;\nconst TodoList = /*#__PURE__*/lazy(_c7 = () => import(\"../pages/todo/ListPage\"));\n\n// 접속하는 URL의 path에 따라 다른 페이지를 보여준다.\n// 라우터가 리액트에서 여러 페이지를 전환해 줄수 있게 한다.\n_c8 = TodoList;\nconst root = createBrowserRouter([{\n  // 기본 URL로 들어왔을때 보여주는 페이지\n  path: '',\n  element:\n  /*#__PURE__*/\n  // fallback이 먼저 실행되고 그 다음에 Main이 실행 되게 만든다.\n  _jsxDEV(Suspense, {\n    fallback: Loading,\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this)\n}, {\n  // /about으로 접속 했을때 리액트 라우터가 보여주는 페이지\n  path: 'about',\n  element: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: Loading,\n    children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 17\n  }, this)\n}, {\n  path: \"todo\",\n  element: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: Loading,\n    children: /*#__PURE__*/_jsxDEV(TodoIndex, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 18\n  }, this),\n  children: todoRouter()\n}]);\nexport default root;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Main$lazy\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"About$lazy\");\n$RefreshReg$(_c4, \"About\");\n$RefreshReg$(_c5, \"TodoIndex$lazy\");\n$RefreshReg$(_c6, \"TodoIndex\");\n$RefreshReg$(_c7, \"TodoList$lazy\");\n$RefreshReg$(_c8, \"TodoList\");","map":{"version":3,"names":["createBrowserRouter","Suspense","lazy","todoRouter","jsxDEV","_jsxDEV","Loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Main","_c","_c2","About","_c3","_c4","TodoIndex","_c5","_c6","TodoList","_c7","_c8","root","path","element","fallback","$RefreshReg$"],"sources":["/Users/yeonguchoe/Desktop/SaleCar24/frontend/src/router/root.js"],"sourcesContent":["import {createBrowserRouter} from \"react-router-dom\";\nimport {Suspense, lazy} from \"react\";\nimport todoRouter from \"./todoRouter\";\n\nconst Loading = <div className={\"text-5xl\"}>Loading...</div>\n\n// Main Page에 대한 느린 컴포넌트를 만든다.\nconst Main = lazy(\n    function () {\n        return (import(\"../pages/MainPage\"));\n    }\n)\n\n// About Page에 대한 느린 컴포넌트를 만든다.\nconst About = lazy(\n    function () {\n        return (import(\"../pages/AboutPage\"));\n    }\n)\n\nconst TodoIndex = lazy(() => import(\"../pages/todo/indexPage\"))\n\nconst TodoList = lazy(() => import(\"../pages/todo/ListPage\"))\n\n// 접속하는 URL의 path에 따라 다른 페이지를 보여준다.\n// 라우터가 리액트에서 여러 페이지를 전환해 줄수 있게 한다.\nconst root = createBrowserRouter([\n    {\n        // 기본 URL로 들어왔을때 보여주는 페이지\n        path: '',\n        element: (\n            // fallback이 먼저 실행되고 그 다음에 Main이 실행 되게 만든다.\n            <Suspense fallback={Loading}>\n                <Main/>\n            </Suspense>\n        )\n    },\n    {\n        // /about으로 접속 했을때 리액트 라우터가 보여주는 페이지\n        path: 'about',\n        element:\n            (\n                <Suspense fallback={Loading}>\n                    <About/>\n                </Suspense>\n            )\n    },\n    {\n        path: \"todo\",\n        element: <Suspense fallback={Loading}><TodoIndex/></Suspense>,\n        children: todoRouter()\n    },\n]);\n\nexport default root;"],"mappings":";AAAA,SAAQA,mBAAmB,QAAO,kBAAkB;AACpD,SAAQC,QAAQ,EAAEC,IAAI,QAAO,OAAO;AACpC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,gBAAGD,OAAA;EAAKE,SAAS,EAAE,UAAW;EAAAC,QAAA,EAAC;AAAU;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CAAC;;AAE5D;AACA,MAAMC,IAAI,gBAAGX,IAAI,CAAAY,EAAA,GACb,SAAAA,CAAA,EAAY;EACR,OAAQ,MAAM,CAAC,mBAAmB,CAAC;AACvC,CACJ,CAAC;;AAED;AAAAC,GAAA,GANMF,IAAI;AAOV,MAAMG,KAAK,gBAAGd,IAAI,CAAAe,GAAA,GACd,SAAAA,CAAA,EAAY;EACR,OAAQ,MAAM,CAAC,oBAAoB,CAAC;AACxC,CACJ,CAAC;AAAAC,GAAA,GAJKF,KAAK;AAMX,MAAMG,SAAS,gBAAGjB,IAAI,CAAAkB,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAAAC,GAAA,GAAzDF,SAAS;AAEf,MAAMG,QAAQ,gBAAGpB,IAAI,CAAAqB,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;;AAE7D;AACA;AAAAC,GAAA,GAHMF,QAAQ;AAId,MAAMG,IAAI,GAAGzB,mBAAmB,CAAC,CAC7B;EACI;EACA0B,IAAI,EAAE,EAAE;EACRC,OAAO;EAAA;EACH;EACAtB,OAAA,CAACJ,QAAQ;IAAC2B,QAAQ,EAAEtB,OAAQ;IAAAE,QAAA,eACxBH,OAAA,CAACQ,IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD;AAElB,CAAC,EACD;EACI;EACAc,IAAI,EAAE,OAAO;EACbC,OAAO,eAECtB,OAAA,CAACJ,QAAQ;IAAC2B,QAAQ,EAAEtB,OAAQ;IAAAE,QAAA,eACxBH,OAAA,CAACW,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAEtB,CAAC,EACD;EACIc,IAAI,EAAE,MAAM;EACZC,OAAO,eAAEtB,OAAA,CAACJ,QAAQ;IAAC2B,QAAQ,EAAEtB,OAAQ;IAAAE,QAAA,eAACH,OAAA,CAACc,SAAS;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;EAC7DJ,QAAQ,EAAEL,UAAU,CAAC;AACzB,CAAC,CACJ,CAAC;AAEF,eAAesB,IAAI;AAAC,IAAAX,EAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAK,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}