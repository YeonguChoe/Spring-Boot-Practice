{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\nconst getNum = (param, defaultValue) => {\n  if (!param) {\n    return defaultValue;\n  }\n  return parseInt(param);\n};\n\n/**\n * 커스텀훅: 여러개의 훅을 1개로 묶고 훅을 재사용하기 위해 사용한다.\n */\n\nconst useCustomMove = () => {\n  _s();\n  // 이동하는 기능을 1개의 훅으로 묶어서 사용한다.\n\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(false);\n  const [queryParams] = useSearchParams();\n  const page = getNum(queryParams.get('page'), 1);\n  const size = getNum(queryParams.get('size'), 10);\n  const queryDefault = createSearchParams({\n    page,\n    size\n  }).toString(); //새로 추가\n\n  const moveToList = pageParam => {\n    let queryStr = \"\";\n    if (pageParam) {\n      const pageNum = getNum(pageParam.page, 1);\n      const sizeNum = getNum(pageParam.size, 10);\n      queryStr = createSearchParams({\n        page: pageNum,\n        size: sizeNum\n      }).toString();\n    } else {\n      queryStr = queryDefault;\n    }\n    navigate({\n      pathname: `../list`,\n      search: queryStr\n    });\n    setRefresh(!refresh); //추가\n  };\n};\n_s(useCustomMove, \"7cazDTfrudn8hz486I1qceoAH8Y=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\nexport default useCustomMove;","map":{"version":3,"names":["createSearchParams","useNavigate","useSearchParams","getNum","param","defaultValue","parseInt","useCustomMove","_s","navigate","refresh","setRefresh","useState","queryParams","page","get","size","queryDefault","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","pathname","search"],"sources":["/Users/yeonguchoe/Desktop/SaleCar24/frontend/src/hooks/usdCustomMove.js"],"sourcesContent":["import {createSearchParams, useNavigate, useSearchParams} from \"react-router-dom\";\n\nconst getNum = (param, defaultValue) => {\n    if (!param) {\n        return defaultValue;\n    }\n    return parseInt(param)\n}\n\n/**\n * 커스텀훅: 여러개의 훅을 1개로 묶고 훅을 재사용하기 위해 사용한다.\n */\n\nconst useCustomMove = () => {\n    // 이동하는 기능을 1개의 훅으로 묶어서 사용한다.\n\n    const navigate = useNavigate()\n\n    const [refresh, setRefresh] = useState(false)\n\n    const [queryParams] = useSearchParams()\n\n    const page = getNum(queryParams.get('page'), 1)\n    const size = getNum(queryParams.get('size'), 10)\n\n    const queryDefault = createSearchParams({page, size}).toString() //새로 추가\n\n\n    const moveToList = (pageParam) => {\n\n        let queryStr = \"\"\n\n        if (pageParam) {\n\n            const pageNum = getNum(pageParam.page, 1)\n            const sizeNum = getNum(pageParam.size, 10)\n\n            queryStr = createSearchParams({page: pageNum, size: sizeNum}).toString()\n        } else {\n            queryStr = queryDefault\n        }\n\n        navigate({\n            pathname: `../list`,\n            search: queryStr\n        })\n\n        setRefresh(!refresh) //추가\n\n\n    }\n}\n\nexport default useCustomMove;"],"mappings":";AAAA,SAAQA,kBAAkB,EAAEC,WAAW,EAAEC,eAAe,QAAO,kBAAkB;AAEjF,MAAMC,MAAM,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;EACpC,IAAI,CAACD,KAAK,EAAE;IACR,OAAOC,YAAY;EACvB;EACA,OAAOC,QAAQ,CAACF,KAAK,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;;AAEA,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;;EAEA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACC,WAAW,CAAC,GAAGX,eAAe,CAAC,CAAC;EAEvC,MAAMY,IAAI,GAAGX,MAAM,CAACU,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGb,MAAM,CAACU,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;EAEhD,MAAME,YAAY,GAAGjB,kBAAkB,CAAC;IAACc,IAAI;IAAEE;EAAI,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAC;;EAGjE,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAE9B,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAID,SAAS,EAAE;MAEX,MAAME,OAAO,GAAGnB,MAAM,CAACiB,SAAS,CAACN,IAAI,EAAE,CAAC,CAAC;MACzC,MAAMS,OAAO,GAAGpB,MAAM,CAACiB,SAAS,CAACJ,IAAI,EAAE,EAAE,CAAC;MAE1CK,QAAQ,GAAGrB,kBAAkB,CAAC;QAACc,IAAI,EAAEQ,OAAO;QAAEN,IAAI,EAAEO;MAAO,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC;IAC5E,CAAC,MAAM;MACHG,QAAQ,GAAGJ,YAAY;IAC3B;IAEAR,QAAQ,CAAC;MACLe,QAAQ,EAAG,SAAQ;MACnBC,MAAM,EAAEJ;IACZ,CAAC,CAAC;IAEFV,UAAU,CAAC,CAACD,OAAO,CAAC,EAAC;EAGzB,CAAC;AACL,CAAC;AAAAF,EAAA,CAtCKD,aAAa;EAAA,QAGEN,WAAW,EAINC,eAAe;AAAA;AAiCzC,eAAeK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}